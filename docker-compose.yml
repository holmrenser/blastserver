name: jingleblast
services:
  app:
    build:
      context: .
      dockerfile: app.Dockerfile
      # network: host
    image: blastserver_app:latest
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - "${APP_PORT}:3000"
    env_file: .env.production

  worker:
    build:
      context: .
      dockerfile: worker.Dockerfile
      # network: host
    image: blastserver_worker:latest
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    deploy:
      replicas: 2
    env_file: .env.production
    volumes:
      - "${BLAST_DB_PATH}:${APP_BLAST_DB_PATH}"

  redis:
    image: redis:7.2.0
    deploy:
      replicas: 1
    expose:
      - "6379"
    env_file: .env.production
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 2s
      timeout: 5s
      retries: 10

  postgres:
    image: postgres:15.4
    deploy:
      replicas: 1
    expose:
      - "5432"
    env_file: .env.production
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 60s
      retries: 10
    volumes:
      - "${HOST_DB_PATH}:${PGDATA}"
      - "./taxonomy:/app/taxonomy"
